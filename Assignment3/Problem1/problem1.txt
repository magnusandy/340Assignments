--Andrew Magnus
--amm215
--CMPT 340 Assignment 3

Prelude> :load problem1.hs
[1 of 1] Compiling Main             ( problem1.hs, interpreted )
Ok, modules loaded: Main.
*Main> --given example of unfold
*Main> int2bin 4
[0,0,1]

--map defined with unfold

*Main> increaseBy1 = Main.map (+1)
*Main> increaseBy1 [1,2,3,4,5]
[2,3,4,5,6]
*Main> toString = Main.map (show)
*Main> toString [1.2, 54.7, 533.8]
["1.2","54.7","533.8"]

--iterate defined with unfold

*Main> infiniteSquares = Main.iterate (*2) 2
*Main> take 10 infiniteSquares
[2,4,8,16,32,64,128,256,512,1024]
*Main> take 50 infiniteSquares
[2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288,1048576,2097152,4194304,8388608,16777216,33554432,67108864,134217728,268435456,536870912,1073741824,2147483648,4294967296,8589934592,17179869184,34359738368,68719476736,137438953472,274877906944,549755813888,1099511627776,2199023255552,4398046511104,8796093022208,17592186044416,35184372088832,70368744177664,140737488355328,281474976710656,562949953421312,1125899906842624]
*Main> take 4 infiniteSquares
[2,4,8,16]
*Main> oneToInfinity = Main.iterate (+1) 1
*Main> take 100 oneToInfinity
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]
*Main> Main.map (*2) (take 100 (Main.iterate (+1) 1))
[2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200]
*Main>
